import { createSlice } from "@reduxjs/toolkit";
import { initialState } from "./state";
import {
  getSuggestionsFulfilledCaseReducer,
  getSuggestionsPendingCaseReducer,
  getSuggestionsRejectedCaseReducer,
} from "./reducers";
import { getEntitySuggestions } from "./thunks";

export const autoCompleteSlice = createSlice({
  name: "autoComplete",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(
        getEntitySuggestions.fulfilled,
        getSuggestionsFulfilledCaseReducer
      )
      .addCase(getEntitySuggestions.pending, getSuggestionsPendingCaseReducer)
      .addCase(
        getEntitySuggestions.rejected,
        getSuggestionsRejectedCaseReducer
      );
  },
});
